[server]
; Server identifier for Telegram API access, which can be obtained at https://my.telegram.org
api_id = 0

; Server identifier hash for Telegram API access, which can be obtained at https://my.telegram.org
api_hash = HASH

; Bot token
bot_token = TOKEN

; Pass true to use Telegram test environment instead of the production environment
use_test_dc = false

; Pass true to keep information about downloaded and uploaded files between application restarts
use_file_database = false

; Pass true to keep cache of users, basic groups, supergroups, channels and secret chats between restarts. Implies use_file_database
use_chat_info_database = false

; Pass true to keep cache of chats and messages between restarts. Implies use_chat_info_database
use_message_database = false

; The path to the directory for storing files/database
files_directory = td-db/

; LIETF language tag of the bot's operating system language; must be non-empty
system_language_code = en

; Encryption key for TDLib database
database_encryption_key = MyEncryptionKey

; Types of updates to broadcast to all consumers.
; "updateOption", "updateAuthorizationState", and "updateConnectionState" 
; are always broadcasted by default, and types below are additional types.
broadcast_types = updateMessageSendSucceeded, updateMessageSendFailed, updateFile


; TDLib options to set on server startup; just add the option name and it's value
[options]
disable_network_statistics = true
disable_time_adjustment_protection = true
disable_persistent_network_statistics = true
ignore_file_names = true
ignore_inline_thumbnails = true
ignore_background_updates = true
use_storage_optimizer = true
message_unload_delay = 60

[rabbitmq]
; Pass true to make all RabbitMQ queues exclusive
exclusive = true

; RabbitMQ username for authentication
username = username

; RabbitMQ password for authentication
password = password

; RabbitMQ server host
host = 0.0.0.0

; RabbitMQ server port (default: 5672)
port = 5672
