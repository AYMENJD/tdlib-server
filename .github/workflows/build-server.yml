name: Build TDLib server
on:
  workflow_dispatch:
  push:
    branches:
      - "main"

    paths:
      - "internal/server/version.go"

jobs:
  build-and-draft:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Version
      id: version
      run: |
        echo "VERSION=$(sed -n 's/const Version = "\([^"]*\)"/\1/p' internal/server/version.go)" >> $GITHUB_OUTPUT

    - name: Build static
      run: |
        mkdir -p release-assets

        docker run --rm -v "$PWD:/work" -w /work quay.io/pypa/manylinux2014_x86_64 \
          bash -c '
          yum install -y centos-release-scl-rh epel-release
          yum install -y devtoolset-9-gcc devtoolset-9-gcc-c++
          yum install wget gcc-c++ make git perl-IPC-Cmd gperf -y
          /opt/python/cp313-cp313/bin/python -m pip install cmake

          git clone --depth 1 --branch OpenSSL_1_1_1 https://github.com/openssl/openssl
          cd openssl
          ./config
          make -j$(($(nproc) + 2)) || exit 1
          make install
          ldconfig
          cd .. && rm -rf openssl

          git clone --depth 1 https://github.com/madler/zlib
          cd zlib
          ./configure --static
          make install || exit 1
          ldconfig
          cd .. && rm -rf zlib

          git clone --depth 1 --branch tdlib-server https://github.com/AYMENJD/td
          cd td
          rm -rf build
          mkdir build
          cd build
          CC=/opt/rh/devtoolset-9/root/usr/bin/gcc CXX=/opt/rh/devtoolset-9/root/usr/bin/g++ cmake -DOPENSSL_USE_STATIC_LIBS=TRUE -DZLIB_USE_STATIC_LIBS=TRUE -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local ..
          cmake --build . --target install -j$(($(nproc) + 1)) || exit 1
          ls -l /usr/local
          cd ../.. && rm -rf td
          ldconfig

          curl -OL https://go.dev/dl/go1.21.0.linux-amd64.tar.gz
          tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz
          rm -f go1.21.0.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin

          make static

          mv bin/tdlib-server release-assets/tdlib-server-linux-amd64
          chmod +x release-assets/tdlib-server-linux-amd64
          '

    - name: Check build
      run: |
        ls -lh release-assets/
        ldd release-assets/tdlib-server-linux-amd64

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        name: TDLib Server v${{ steps.version.outputs.VERSION }}
        tag_name: v${{ steps.version.outputs.VERSION }}
        files: release-assets/tdlib-server-linux-amd64
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
